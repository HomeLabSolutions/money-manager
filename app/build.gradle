plugins {
    id('com.android.application')
    id('kotlin-android')
    id('kotlin-kapt')
    id('kotlin-parcelize')
    id('com.google.gms.google-services')
    id('androidx.navigation.safeargs.kotlin')
    id('com.google.firebase.crashlytics')
    id('dagger.hilt.android.plugin')
    id('io.gitlab.arturbosch.detekt')
}

apply from: '../shared_dependencies.gradle'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {

    signingConfigs {
        release {
            keyAlias keystoreProperties["keyAlias"]
            keyPassword keystoreProperties["keyPassword"]
            storeFile file(keystoreProperties["storeFile"])
            storePassword keystoreProperties["storePassword"]
        }
    }

    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    def versionMajor = 1
    def versionMinor = 0
    def versionPatch = 0
    def versionBuild = 16

    defaultConfig {
        applicationId names.applicationId
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 1000 * (1000 * versionMajor + 100 * versionMinor + versionPatch) + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        buildConfigField("String", "API_KEY", keystoreProperties['currency_api_key'])
        buildConfigField("String", "SALT", keystoreProperties['database_salt'])
        buildConfigField("String", "BASE64_ENCODED_PUBLIC_KEY", "\"" + keystoreProperties['base64EncodedPublicKey'] + "\"")

        vectorDrawables.useSupportLibrary = true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.incremental"   : "true",
                        "room.schemaLocation": "$projectDir/schemas".toString()
                ]
            }
        }
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            versionNameSuffix "-debug"
            minifyEnabled false
        }
    }

    buildFeatures {
        viewBinding true
    }
    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    configurations {
        ktlint
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES', 'META-INF/LICENSE', 'META-INF/LICENSE.txt', 'META-INF/license.txt', 'META-INF/NOTICE', 'META-INF/NOTICE.txt', 'META-INF/notice.txt', 'META-INF/ASL2.0']
        }
    }

    kapt {
        correctErrorTypes = true
    }

    if (project.hasProperty('devBuild')) {
        splits.abi.enable = false
        splits.density.enable = false
        aaptOptions.cruncherEnabled = false
    }

}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/pinterest/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "-F", "src/**/*.kt"
}

repositories {
    maven { url 'https://jitpack.io' }
}

dependencies {

    implementation project(':core')

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.6.21"

    implementation platform('com.google.firebase:firebase-bom:29.3.1')
    implementation "com.google.firebase:firebase-auth-ktx"
    implementation "com.firebaseui:firebase-ui-auth:6.2.0"
    implementation "com.google.android.gms:play-services-auth:20.2.0"

    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-storage-ktx'

    implementation "com.facebook.android:facebook-login:5.15.3"
    implementation("com.twitter.sdk.android:twitter:3.3.0") {
        transitive = true
    }

    implementation "com.squareup.okhttp3:okhttp:4.9.1"
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.1"

    implementation "com.github.bumptech.glide:glide:4.12.0"

    implementation "com.facebook.stetho:stetho:1.5.1"
    implementation "com.facebook.stetho:stetho-okhttp3:1.5.1"

    implementation "androidx.paging:paging-runtime-ktx:3.1.1"
    implementation "androidx.room:room-runtime:2.4.2"
    implementation "androidx.room:room-ktx:2.4.2"
    implementation "androidx.room:room-paging:2.4.2"
    kapt "androidx.room:room-compiler:2.4.2"
    implementation "net.zetetic:android-database-sqlcipher:4.5.0"
    implementation "androidx.sqlite:sqlite-ktx:2.2.0"

    implementation "androidx.viewpager2:viewpager2:1.0.0"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.3"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.4.1"

    implementation "androidx.work:work-runtime-ktx:2.7.1"
    implementation "androidx.hilt:hilt-work:1.0.0"

    implementation "com.beust:klaxon:5.5"

    implementation "com.github.PhilJay:MPAndroidChart:v3.1.0"

    ktlint "com.pinterest:ktlint:0.45.2"

    implementation "com.android.billingclient:billing-ktx:5.0.0"
    implementation "com.tbuonomo:dotsindicator:4.3"
}
